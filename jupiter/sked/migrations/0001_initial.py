# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-10-27 03:52
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('deleted', models.DateTimeField(null=True)),
                ('date', models.DateField(db_index=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('deleted', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('deleted', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobTaskFact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backlog_minutes', models.IntegerField(default=0)),
                ('complete_minutes', models.IntegerField(default=0)),
                ('job_complete', models.BooleanField(default=False)),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Date')),
                ('expertise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Expertise')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Job')),
            ],
        ),
        migrations.CreateModel(
            name='JobTasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Job')),
            ],
        ),
        migrations.CreateModel(
            name='JobType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('deleted', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('deleted', models.DateTimeField(null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('deleted', models.DateTimeField(null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('deleted', models.DateTimeField(null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='producttasks',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Task'),
        ),
        migrations.AddField(
            model_name='jobtype',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Organization'),
        ),
        migrations.AddField(
            model_name='jobtasks',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Task'),
        ),
        migrations.AddField(
            model_name='jobtaskfact',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Organization'),
        ),
        migrations.AddField(
            model_name='jobtaskfact',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Product'),
        ),
        migrations.AddField(
            model_name='jobtaskfact',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Task'),
        ),
        migrations.AddField(
            model_name='jobtaskfact',
            name='technician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Technician'),
        ),
        migrations.AddField(
            model_name='job',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Organization'),
        ),
        migrations.AddField(
            model_name='job',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Product'),
        ),
        migrations.AddField(
            model_name='job',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.JobType'),
        ),
        migrations.AddField(
            model_name='expertise',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Organization'),
        ),
        migrations.AddField(
            model_name='date',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Organization'),
        ),
        migrations.AlterUniqueTogether(
            name='producttasks',
            unique_together=set([('product', 'task')]),
        ),
        migrations.AlterUniqueTogether(
            name='jobtasks',
            unique_together=set([('job', 'task')]),
        ),
    ]
